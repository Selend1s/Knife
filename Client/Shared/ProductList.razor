@using Knife.Client.Services.ProductServices
@inject HttpClient Http
@inject IProductService ProductService

<h3>Product List for you!</h3>

@if (ProductService.Products == null || ProductService.Products.Count == 0)
{
    <span>Loading Products......</span>
}
else
{
    <ul class="list-unstyled">
        @foreach (var product in ProductService.Products)
        {
            <li class="media my-3">
                <div class="media-img-wrapper my-2">
                    <a href="/product/@product.Id">
                        <img class="media-img" src="@product.ImageUrl" alt="@product.Title">
                    </a>
                </div>
                <div class="media-body">
                    <a href="/product/@product.Id">
                        <h4 class="mb-0">@product.Title</h4>
                    </a>
                    <p>@product.Description</p>
                    @*<a href="swagger/index.html">*@
                    <h5 class="price">
                        ￥@product.Price 元
                    </h5>
                    @*</a>*@
                </div>
            </li>
        }
    </ul>
}


@code {
    //private static List<Product> Products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        //var result = await Http.GetFromJsonAsync<ServiceResponse<List<Product>>>("api/Product");
        //if(result!=null && result.Data != null)
        //    Products = result.Data;
        await ProductService.GetProducts();
    }
}
